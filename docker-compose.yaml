version: "3.8"
networks:
  default: {}
  backend:
    ipam:
      config:
        - subnet: 172.52.0.0/16
services:
  cloudflared:
    command: "tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}"
    container_name: cloudflared
    env_file: .env
    image: cloudflare/cloudflared:latest
    profiles: ['internal']
    restart: unless-stopped
  dhcphelper:
    cap_add:
      - NET_ADMIN
    container_name: dhcphelper
    environment:
      - IP=172.52.0.10
    image: homeall/dhcphelper:latest
    network_mode: host
    restart: unless-stopped
  ddns:
    container_name: ddns
    env_file: .env
    image: oznu/cloudflare-ddns:latest
    restart: unless-stopped
  nginx-proxy-manager:
    container_name: nginx-proxy-manager
    image: jc21/nginx-proxy-manager:latest
    ports:
      - 8080:80
      - 8081:81
      - 8443:443
    profiles: ['internal']
    restart: unless-stopped
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
  ntfy:
    command:
      - serve
    container_name: ntfy
    env_file: .env
    image: binwiederhier/ntfy:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.ntfy.rule=Host(`ntfy.stargate.${DOMAIN}`)
      - traefik.http.routers.ntfy.tls=true
      - traefik.http.routers.ntfy.entrypoints=websecure
      - traefik.http.services.ntfy.loadbalancer.server.port=80
    restart: unless-stopped
  pihole:
    cap_add:
      - NET_ADMIN
    container_name: pihole
    depends_on:
      - dhcphelper
      - traefik
    env_file: .env
    image: pihole/pihole:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.pihole.rule=Host(`stargate.${DOMAIN}`)
      - traefik.http.routers.pihole.tls=true
      - traefik.http.routers.pihole.entrypoints=websecure
      - traefik.http.services.pihole.loadbalancer.server.port=80
    networks:
      default: {}
      backend:
        ipv4_address: "172.52.0.10"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - 4080:80
    restart: unless-stopped
    volumes:
      - ./etc/pihole:/etc/pihole
      - ./etc/dnsmasq.d/02-pihole-dhcp.conf:/etc/dnsmasq.d/02-pihole-dhcp.conf:ro
      - ./etc/dnsmasq.d:/etc/dnsmasq.d
  traefik:
    command:
      - --api.dashboard=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAIN}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN},*.stargate.${DOMAIN}
      - --log.level=DEBUG
      - --providers.docker.exposedbydefault=true
      - --providers.docker=true
      - --serverstransport.insecureskipverify=true
    container_name: traefik
    env_file: .env
    image: traefik:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.stargate.${DOMAIN}`)
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.service=api@internal
    ports:
      - 80:80
      - 443:443
    networks:
      default: {}
    restart: unless-stopped
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
  watchtower:
    container_name: watchtower
    env_file: .env
    environment:
      WATCHTOWER_SCHEDULE: "0 0 1 * * *"
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_DEBUG: "true"
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  wireguard:
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    container_name: wireguard
    env_file: .env
    image: weejewel/wg-easy
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    profiles: ['vpn']
    restart: unless-stopped
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - ./etc/wireguard:/etc/wireguard
